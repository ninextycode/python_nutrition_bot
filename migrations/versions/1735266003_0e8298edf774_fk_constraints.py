"""fk constraints

Revision ID: 0e8298edf774
Revises: 5db1f145ce6b
Create Date: 2024-12-25 07:10:32.834330

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '0e8298edf774'
down_revision: Union[str, None] = '5db1f145ce6b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    print(f"running upgrade for revision {revision}")
    op.create_check_constraint(
        constraint_name='non_negative_weight',
        table_name="users", condition='(`Weight` >= 0)'
    )

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('uq_genders_gender'), 'genders', ['gender'])
    op.create_unique_constraint(op.f('uq_goals_goal'), 'goals', ['goal'])
    op.create_foreign_key(op.f('fk_meals_eaten_user_id_users'), 'meals_eaten', 'users', ['user_id'], ['id'])
    op.create_foreign_key(op.f('fk_meals_for_future_use_user_id_users'), 'meals_for_future_use', 'users', ['user_id'], ['id'])
    op.create_unique_constraint(op.f('uq_timezones_timezone'), 'timezones', ['timezone'])
    op.alter_column('users', 'weight',
               existing_type=mysql.DECIMAL(unsigned=True, precision=7, scale=1),
               type_=mysql.DECIMAL(precision=5, scale=1),
               existing_nullable=False)
    op.create_unique_constraint(op.f('uq_users_telegram_id'), 'users', ['telegram_id'])
    op.create_foreign_key(op.f('fk_users_gender_id_genders'), 'users', 'genders', ['gender_id'], ['id'])
    op.create_foreign_key(op.f('fk_users_timezone_id_timezones'), 'users', 'timezones', ['timezone_id'], ['id'])
    op.create_foreign_key(op.f('fk_users_goal_id_goals'), 'users', 'goals', ['goal_id'], ['id'])
    op.create_unique_constraint(op.f('uq_users_targets_user_id'), 'users_targets', ['user_id'])
    op.create_foreign_key(op.f('fk_users_targets_user_id_users'), 'users_targets', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    print(f"running downgrade for revision {revision}")
    op.drop_constraint("non_negative_weight", 'users', type_='check')
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_users_targets_user_id_users'), 'users_targets', type_='foreignkey')
    op.drop_constraint(op.f('uq_users_targets_user_id'), 'users_targets', type_='unique')
    op.drop_constraint(op.f('fk_users_goal_id_goals'), 'users', type_='foreignkey')
    op.drop_constraint(op.f('fk_users_timezone_id_timezones'), 'users', type_='foreignkey')
    op.drop_constraint(op.f('fk_users_gender_id_genders'), 'users', type_='foreignkey')
    op.drop_constraint(op.f('uq_users_telegram_id'), 'users', type_='unique')
    op.alter_column('users', 'weight',
               existing_type=mysql.DECIMAL(precision=5, scale=1),
               type_=mysql.DECIMAL(unsigned=True, precision=7, scale=1),
               existing_nullable=False)
    op.drop_constraint(op.f('uq_timezones_timezone'), 'timezones', type_='unique')
    op.drop_constraint(op.f('fk_meals_for_future_use_user_id_users'), 'meals_for_future_use', type_='foreignkey')
    op.drop_constraint(op.f('fk_meals_eaten_user_id_users'), 'meals_eaten', type_='foreignkey')
    op.drop_constraint(op.f('uq_goals_goal'), 'goals', type_='unique')
    op.drop_constraint(op.f('uq_genders_gender'), 'genders', type_='unique')
    # ### end Alembic commands ###
