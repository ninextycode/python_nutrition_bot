CREATE DATABASE IF NOT EXISTS food_database;


CREATE TABLE IF NOT EXISTS users(
    ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    CreatedUTCDateTime DATETIME NOT NULL DEFAULT (UTC_TIMESTAMP),
    Name VARCHAR(100) NOT NULL,
    TelegramID VARCHAR(100) NOT NULL UNIQUE,
    IsActive BOOL NOT NULL DEFAULT FALSE,
    TimeZoneID INT UNSIGNED NOT NULL DEFAULT 0,
    GenderID INT UNSIGNED NOT NULL,
    GoalID INT UNSIGNED NOT NULL,
    Weight DECIMAL(7, 1) NOT NULL CHECK (Weight >= 0),
    Height INT UNSIGNED NOT NULL,
    DateOfBirth DATE NOT NULL,

    FOREIGN KEY (TimeZoneID) REFERENCES timezones(ID),
    FOREIGN KEY (GenderID) REFERENCES genders(ID),
    FOREIGN KEY (GoalID) REFERENCES goals(ID)
);


CREATE TABLE IF NOT EXISTS meals_eaten(
    ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    UserID INT UNSIGNED NOT NULL,

    CreatedUTCDateTime DATETIME NOT NULL DEFAULT (UTC_TIMESTAMP),
    CreatedLocalDateTime DATETIME NOT NULL,

    Name VARCHAR(100) NOT NULL,
    Description VARCHAR(5000),

    Weight DECIMAL(10, 4) UNSIGNED NOT NULL,
    Calories DECIMAL(10, 4) UNSIGNED NOT NULL,
    Carbs DECIMAL(10, 4) UNSIGNED NOT NULL,
    Protein DECIMAL(10, 4) UNSIGNED NOT NULL,
    Fat DECIMAL(10, 4) UNSIGNED NOT NULL,

    FOREIGN KEY (UserID) REFERENCES users(ID)
);
DROP TRIGGER IF EXISTS set_local_time_meal_eaten;
DELIMITER //
CREATE TRIGGER set_local_time_meal_eaten
BEFORE INSERT ON meals_eaten
FOR EACH ROW
BEGIN
    DECLARE user_timezone VARCHAR(200);
    IF NEW.CreatedLocalDateTime IS NULL THEN
        SELECT t.timezone INTO user_timezone
        FROM users u
        JOIN timezones t ON u.TimeZoneID = t.ID
        WHERE u.ID = NEW.UserID;
        SET NEW.CreatedLocalDateTime = CONVERT_TZ(NEW.CreatedUTCDateTime, 'UTC', user_timezone);
    END IF;
END;
//
DELIMITER ;


CREATE TABLE IF NOT EXISTS users_targets(
    ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    UserID INT UNSIGNED UNIQUE NOT NULL,
    Calories INT UNSIGNED NOT NULL,
    Protein INT UNSIGNED NOT NULL,
    Fat INT UNSIGNED NOT NULL,
    Carbs INT UNSIGNED NOT NULL,
    MealUTCDateTime DATETIME NOT NULL DEFAULT (UTC_TIMESTAMP),

    FOREIGN KEY (UserID) REFERENCES users(ID)
);


CREATE TABLE IF NOT EXISTS genders(
    ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Gender VARCHAR(50) UNIQUE NOT NULL
);
INSERT INTO genders (ID, Gender) VALUES
    (1, 'Male'), (2, 'Female')
ON DUPLICATE KEY UPDATE Gender=VALUES(Gender);


CREATE TABLE IF NOT EXISTS timezones(
    ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    TimeZone VARCHAR(200) UNIQUE NOT NULL
);
INSERT INTO timezones (ID, TimeZone) VALUES
    (1, 'UTC')
ON DUPLICATE KEY UPDATE TimeZone=VALUES(TimeZone);


CREATE TABLE IF NOT EXISTS goals(
    ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Goal VARCHAR(200) UNIQUE NOT NULL
);
INSERT INTO goals (ID, Goal) VALUES
    (1, 'lose weight'),
    (2, 'lose weight slowly'),
    (3, 'maintain weight'),
    (4, 'gain muscle slowly'),
    (5, 'gain muscle')
ON DUPLICATE KEY UPDATE Goal=VALUES(Goal);


CREATE TABLE IF NOT EXISTS meals_for_future_use(
    ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    UserID INT UNSIGNED NOT NULL,

    CreatedUTCDateTime DATETIME NOT NULL DEFAULT (UTC_TIMESTAMP),

    Name VARCHAR(100) NOT NULL,
    Description VARCHAR(5000),

    DefaultWeightGrams DECIMAL(10, 4) UNSIGNED NOT NULL,
    CaloriesPer100g DECIMAL(10, 4) UNSIGNED NOT NULL,
    ProteinPer100g DECIMAL(10, 4) UNSIGNED NOT NULL,
    FatPer100g DECIMAL(10, 4) UNSIGNED NOT NULL,
    CarbsPer100g DECIMAL(10, 4) UNSIGNED NOT NULL,

    FOREIGN KEY (UserID) REFERENCES users(ID),
    UNIQUE (UserID, Name)
);
